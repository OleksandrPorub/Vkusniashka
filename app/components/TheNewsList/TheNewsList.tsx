"use client";

import { useEffect, useState } from "react";
// import { useEffect, useRef } from "react";
import styles from "./TheNewsList.module.scss";
// import { register } from "swiper/element/bundle";

// register();

const newsDefault = [
    {
        id: "01",
        date: new Date("2024-01-12").getTime(),
        title: "–ë—É–¥—É –æ 18:30",
        text: "",
    },
    {
        id: "02",
        date: new Date("2024-01-12").getTime(),
        title: "–î–æ–±—Ä–æ–≥–æ –¥–Ω—èüç≤üç≤üç≤üç≤",
        text: "–î–æ–±—Ä–æ–≥–æ –¥–Ω—èüç≤üç≤üç≤üç≤  –°—å–æ–≥–æ–¥–Ω—ñ —É –Ω–∞—Å –≤ –º–µ–Ω—é –ö–∞—Ä–∞—Å—ñ  –ö–æ—Ç–ª–µ—Ç–∏   –í–∞—Ä–µ–Ω–∏–∫–∏ –∑ –∫–∞–ø—É—Å—Ç–æ—é  –í–∞—Ä–µ–Ω–∏–∫–∏ –∑ –∫–∞—Ä—Ç–æ–ø–ª–µ—é  –ó—Ä–∞–∑–∏ –∑ –º'—è—Å–æ–º –ö–∞–ø—É—Å—Ç–∞ —Ç—É—à–∫–æ–≤–∞–Ω–∞ –°-—Ç –∑ –∫—Ä–∞–±–æ–≤–∏–º–∏ –ø–∞–ª–∏—á–∫–∞–º–∏ –°-—Ç –û–ª—ñ–≤'—î ü•¶ü•¶ü•¶ü•¶ü•¶ü•¶ü•¶ü•¶",
    },
    {
        id: "03",
        date: new Date("2024-01-15").getTime(),
        title: "–î–æ–±—Ä–æ–≥–æ –¥–Ω—èüç≤üç≤üç≤üç≤",
        text: "–î–æ–±—Ä–æ–≥–æ –¥–Ω—èüç≤üç≤üç≤üç≤ –°—å–æ–≥–æ–¥–Ω—ñ —É –Ω–∞—Å –≤ –º–µ–Ω—é:)        –ö–æ—Ç–ª–µ—Ç–∏         –ì–æ–ª—É–±—Ü—ñ         –í–∞—Ä–µ–Ω–∏–∫–∏ –∑ –∫–∞–ø—É—Å—Ç–æ—é         –í–∞—Ä–µ–Ω–∏–∫–∏ –∑ –∫–∞—Ä—Ç–æ–ø–ª–µ—é         –ó—Ä–∞–∑–∏ –∑ –º'—è—Å–æ–º        –¢–æ—Ä—Ç –ø–µ—á—ñ–Ω–∫–æ–≤–∏–π         –í–µ–Ω—ñ–≥—Ä–µ—Ç        –°–æ–ª—ñ–Ω–Ω—è –≤ –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—ñ    ü•¶ü•¶ü•¶ü•¶ü•¶ü•¶ü•¶ü•¶",
    },
    {
        id: "04",
        date: new Date("2023-01-12").getTime(),
        title: "–î–æ—Å—Ç—É–ø–Ω–∏–π –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω–∏—è –±–æ—Ä—â –∑ –∫–≤–∞—Å–æ–ª–µ—é.",
        text: "–í—ñ–¥—Å—å–æ–≥–æ–¥–Ω—ñ —É –Ω–∞—Å –≤ –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—ñ –¥–æ—Å—Ç—É–ø–Ω–∏–π –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω–∏—è –±–æ—Ä—â —á–µ—Ä–≤–æ–Ω–∏–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –∑ –∫–≤–∞—Å–æ–ª–µ—é. Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe blanditiis sit soluta quia magni est incidunt voluptatibus officiis voluptas reiciendis.",
    },
    {
        id: "05",
        date: new Date("2023-01-05").getTime(),
        title: "–°—å–æ–≥–æ–¥–Ω—ñ —É –º–∞–≥–∞–∑–∏–Ω—ñ –±—É–¥–µ –≤–µ–ª–∏–∫–∏ –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç.",
        text: "–ó –ø–æ–≤–Ω–∏–º –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –≤–∏ –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å —É —Ä–æ–∑–¥—ñ–ª—ñ –ú–ï–ù–Æ.  Saepe blanditiis sit soluta quia magni est incidunt voluptatibus officiis voluptas reiciendis.",
    },
    {
        id: "06",
        date: new Date("2023-10-21").getTime(),
        title: "–í—Å—ñ—Ö –≤—ñ—Ç–∞—é –∑—ñ —Å–≤—è—Ç–æ–º! –ú–∞–≥–∞–∑–∏–Ω –Ω–µ –±—É–¥–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ 4 –¥–Ω—ñ.",
        text: "Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe blanditiis sit soluta quia magni est incidunt voluptatibus officiis voluptas reiciendis.",
    },
];

type newsType = {
    id: string;
    date: number;
    title: string;
    text: string;
};
type propsType = {
    newsList?: newsType[];
};

// const swiperParams = {
//     slidesPerView: 1,
//     speed: 100,
//     spaceBetween: 15,
// };

const TheNewsList = ({ newsList = newsDefault }: propsType) => {
    // const swiperElRef = useRef(null);
    const [newsListSorted, setNewsListSorted] = useState([...newsList]);
    const dateNowObj = new Date;

    // useEffect(() => {
    //     Object.assign(swiperElRef.current, swiperParams);
    //     swiperElRef.current.initialize();
    //     swiperElRef.current.addEventListener("swiperprogress", (e) => {
    //         const [swiper, progress] = e.detail;
    //         console.log(progress);
    //     });
    //     swiperElRef.current.addEventListener("swiperslidechange", (e) => {
    //         console.log("slide changed");
    //     });
    // }, []);
    console.log(dateNowObj.getTime());
    console.log(dateNowObj);

    useEffect(() => {
        const fnCompare = (a: newsType, b: newsType) => {
            if (a.date < b.date) return 1;
            if (a.date > b.date) return -1;
            return 0
        };
        // const sorted = newsList.sort(fnCompare);
        setNewsListSorted(newsList.sort(fnCompare));
    }, [newsList]);
const whichDay = (date:number)=>{
    if (new Date(date).toLocaleDateString()===dateNowObj.toLocaleDateString()) return "–°–¨–û–ì–û–î–ù–Ü";
    if (new Date(date+(24*3600*1000)).toLocaleDateString()===dateNowObj.toLocaleDateString()) return "–í–ß–û–†–ê";
    return null;
}
const daysOfTheWeek =[
    "–Ω–µ–¥—ñ–ª—è",
    "–ø–æ–Ω–µ–¥—ñ–ª–æ–∫",
    "–≤—ñ–≤—Ç–æ—Ä–æ–∫",
    "—Å–µ—Ä–µ–¥–∞",
    "—á–µ—Ç–≤–µ—Ä",
    "–ø'—è—Ç–Ω–∏—Ü—è",
    "—Å—É–±–æ—Ç–∞"
]
    return (
        <div className={styles.wrapper}>
            <h3 className={styles.headLine}>–ù–æ–≤–∏–Ω–∏</h3>
            <ul className={styles.newsList}>
                {newsListSorted.map((news) => (
                    <li key={news.id}>
                        <article className={styles.newsCard}>
                            <span className={styles.newsCard_date}><strong className={styles.newsCard_date_strong}>{whichDay(news.date)}</strong>&nbsp;&nbsp;{new Date(news.date).toLocaleDateString()}&nbsp;&nbsp;{daysOfTheWeek[(new Date(news.date).getDay())]}</span>
                            <h4 className={styles.newsCard_title}>{news.title}</h4>
                            <p className={styles.newsCard_text}>{news.text}</p>
                        </article>
                    </li>
                ))}
            </ul>
            {/* <div className={styles.outerBox}>
                <swiper-container ref={swiperElRef} slides-per-view="1"
                    speed="100"
                    spaceBetween="15"
                    navigation="true"
                    pagination="true">
                    {newsList.map((news) => (
                        <swiper-slide key={news.id}>
                            <article className={styles.newsCard}>
                                <span className={styles.newsCard_date}>
                                    {news.date.getDate()}.{news.date.getMonth() + 1}.{news.date.getFullYear()}
                                </span>
                                <h4 className={styles.newsCard_title}>{news.title}</h4>
                                <p className={styles.newsCard_text}>{news.text}</p>
                            </article>
                        </swiper-slide>
                    ))}                   
                </swiper-container>
            </div> */}
        </div>
    );
};

export default TheNewsList;
